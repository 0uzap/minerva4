a:10:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:72:"/var/www/html/minerva4/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:67:"/var/www/html/minerva4/vendor/symfony/http-kernel/Bundle/Bundle.php";s:4:"line";i:143;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddParamConverterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:72:"/var/www/html/minerva4/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:60:"/var/www/html/minerva4/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\OptimizerPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:72:"/var/www/html/minerva4/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:60:"/var/www/html/minerva4/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:371:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddExpressionLanguageProvidersPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:72:"/var/www/html/minerva4/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:60:"/var/www/html/minerva4/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:97:"/var/www/html/minerva4/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:295;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:103:"/var/www/html/minerva4/vendor/symfony/dependency-injection/Compiler/MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:112:"Since doctrine/doctrine-bundle 2.11: Not setting "doctrine.orm.enable_lazy_ghost_objects" to true is deprecated.";s:4:"file";s:96:"/var/www/html/minerva4/vendor/doctrine/doctrine-bundle/DependencyInjection/DoctrineExtension.php";s:4:"line";i:575;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:96:"/var/www/html/minerva4/vendor/doctrine/doctrine-bundle/DependencyInjection/DoctrineExtension.php";s:4:"line";i:120;s:8:"function";s:7:"ormLoad";s:5:"class";s:68:"Doctrine\Bundle\DoctrineBundle\DependencyInjection\DoctrineExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:376:"In ORM 3.0, the AttributeDriver will report fields for the classes where they are declared. This may uncover invalid mapping configurations. To opt into the new mode today, set the "reportFieldsWhereDeclared" constructor parameter to true. (AttributeDriver.php:82 called by App_KernelDevDebugContainer.php:765, https://github.com/doctrine/orm/pull/10455, package doctrine/orm)";s:4:"file";s:93:"/var/www/html/minerva4/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php";s:4:"line";i:210;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:93:"/var/www/html/minerva4/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php";s:4:"line";i:108;s:8:"function";s:24:"delegateTriggerToBackend";s:5:"class";s:33:"Doctrine\Deprecations\Deprecation";s:4:"type";s:2:"::";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:307:"Not enabling lazy ghost objects is deprecated and will not be supported in Doctrine ORM 3.0. Ensure Doctrine\ORM\Configuration::setLazyGhostObjectEnabled(true) is called to enable them. (ProxyFactory.php:169 called by EntityManager.php:182, https://github.com/doctrine/orm/pull/10837/, package doctrine/orm)";s:4:"file";s:93:"/var/www/html/minerva4/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php";s:4:"line";i:210;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:93:"/var/www/html/minerva4/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php";s:4:"line";i:108;s:8:"function";s:24:"delegateTriggerToBackend";s:5:"class";s:33:"Doctrine\Deprecations\Deprecation";s:4:"type";s:2:"::";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Version detection logic for MySQL will change in DBAL 4. Please specify the version as the server reports it, e.g. "10.9.3-MariaDB" instead of "mariadb-10.9". (AbstractMySQLDriver.php:154 called by AbstractMySQLDriver.php:42, https://github.com/doctrine/dbal/pull/5779, package doctrine/orm)";s:4:"file";s:93:"/var/www/html/minerva4/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php";s:4:"line";i:210;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:93:"/var/www/html/minerva4/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php";s:4:"line";i:108;s:8:"function";s:24:"delegateTriggerToBackend";s:5:"class";s:33:"Doctrine\Deprecations\Deprecation";s:4:"type";s:2:"::";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Support for MariaDB < 10.4 is deprecated and will be removed in DBAL 4. Consider upgrading to a more recent version of MariaDB. (AbstractMySQLDriver.php:59 called by AbstractDriverMiddleware.php:68, https://github.com/doctrine/dbal/pull/6110, package doctrine/dbal)";s:4:"file";s:93:"/var/www/html/minerva4/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php";s:4:"line";i:210;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:93:"/var/www/html/minerva4/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php";s:4:"line";i:108;s:8:"function";s:24:"delegateTriggerToBackend";s:5:"class";s:33:"Doctrine\Deprecations\Deprecation";s:4:"type";s:2:"::";}}s:5:"count";i:1;}}